@model SmsWeb.Models.ScheduleModel

<!DOCTYPE html>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/themes/base/jquery-ui.css")
<script type="text/javascript" src="~/Scripts/jquery-ui-timepicker-addon.js" ></script>
<script type="text/javascript" src="~/Scripts/MessageBuilder.js" ></script>
@Styles.Render("~/Content/timepicker.css")
<script type="text/javascript">   
$(document).ready(function () {
    $('input[name="ScheduledTime"]').datetimepicker({ dateFormat: 'dd/mm/yy' });

    $('#MessageBody').bind('keyup', function () {
        CountMessageChar($('#MessageBody'));
    });
    CountMessageChar($('#MessageBody'));
    });
</script>
<html>
    <head>
        <title>Create Scheduled Sms</title>
    </head>
    <body>
    <h2>Create a message to schedule a message for later</h2>    
    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>SendNowModel</legend>

            <div>
                @Html.LabelFor(model => model.Number)
                @Html.EditorFor(model => model.Number)
                @Html.ValidationMessageFor(model => model.Number)
            </div>

            <div>
                @Html.LabelFor(model => model.MessageBody, "Message Body")
                @{var messageValidationClass = Model != null && Model.MessageBody.Length <= 160 ? "messageInputValid" : "messageInputInvalid";}
                @Html.TextAreaFor(model => model.MessageBody, new Dictionary<string, object> { { "class", @messageValidationClass } })
                @Html.ValidationMessageFor(model => model.MessageBody)
                <div id="messageCounter"></div>
            </div>

            <div>
                @Html.LabelFor(model => model.ScheduledTime, "Scheduled Time")
                @Html.EditorFor(model => model.ScheduledTime)
                @Html.ValidationMessageFor(model => model.ScheduledTime)
            </div>

            <div>
                @Html.LabelFor(model => model.ConfirmationEmail, "Confirmation Email")
                @Html.EditorFor(model => model.ConfirmationEmail)
                @Html.ValidationMessageFor(model => model.ConfirmationEmail)
            </div>
    
                    <div>
                @Html.LabelFor(model => model.Topic)
                @Html.EditorFor(model => model.Topic)
                @Html.ValidationMessageFor(model => model.Topic)
            </div>
        
            <div>
                @Html.Label("tag", "Tags")
                <input name="tag" id="tag"/>
            </div>

            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
    }
    </body>
</html>