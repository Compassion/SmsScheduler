@model SmsWeb.Models.CoordinatedSharedMessageModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/shared/_BootstrapLayout.basic.cshtml";
}

@*@section Scripts {*@
    @Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/themes/base/jquery-ui.css")
@*@Scripts.Render("~/bundles/jqueryval")*@
@*}*@

<script type="text/javascript" src="~/Scripts/jquery-ui-timepicker-addon.js" ></script>
<script type="text/javascript" src="~/Scripts/Coordinator.js" ></script>
<script type="text/javascript" src="~/Scripts/MessageBuilder.js" ></script>

<script type="text/javascript" src="~/Scripts/jquery.tagsinput.js"></script>
@Styles.Render("~/Content/jquery.tagsinput.css")
@Styles.Render("~/Content/Homegrown.css")
@Styles.Render("~/Content/timepicker.css")
<script type="text/javascript">
    function MobileNumberCount() {
        var numbers = $('#Numbers').val().split(',');
        var numberCount = 0;
        for (var i = 0; i < numbers.length; i++) {
            if (numbers[i].replace(" ", "").length > 2)
                numberCount++;
        }
        return numberCount;
    }

    function showOrHideTiming() {
        if (MobileNumberCount() > 1) {
            $('#CoordinationTiming').show(600);
        } else {
            $('#CoordinationTiming').hide(600);
        }
    }

    $(document).ready(function () {

        $('input[name="StartTime"]').datetimepicker({dateFormat: 'dd/mm/yy'});
        $('input[name="SendAllBy"]').datetimepicker({dateFormat: 'dd/mm/yy'});

        $('#TimeSeparatedButton').bind('click', function() {
            ShowTimeSeparated();
        });

        $('#SendAllByButton').bind('click', function() {
            ShowSendAll();
        });
        
        $('#AllAtOnceButton').bind('click', function () {
            HideTimingOptions();
        });

        $('#Numbers').bind('change keyup blur focus', function() {
            showOrHideTiming();
        });
        showOrHideTiming();
        
        $('#Message').bind('keyup', function () {   
            CountMessageChar($('#Message'));
        });
        CountMessageChar($('#Message'));

        CheckSendAll();
        CheckTimeSeparated();

        $('#Tags').tagsInput({ autocomplete_url: "/Tag/Search/" });
    });
</script>


<h2>Create Coordinated Messages</h2>


@using (Html.BeginForm("Create", "Coordinator", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <div>
            @Html.LabelFor(model => model.Topic)
            @Html.EditorFor(model => model.Topic)
            @Html.ValidationMessageFor(model => model.Topic)
        </div>

        <div>
            @Html.LabelFor(model => model.Message)
            @{ 
                var messageValidationClass = Model != null && !string.IsNullOrWhiteSpace(Model.Message) && Model.Message.Length <= 160 ? "messageInputValid" : "messageInputInvalid";
                messageValidationClass = messageValidationClass + ", span6";
            }
            @Html.TextAreaFor(model => model.Message, new Dictionary<string, object> { {"class", @messageValidationClass}})
            @Html.ValidationMessageFor(model => model.Message)
            <div id="messageCounter"></div>
        </div>

        <div>
            @Html.LabelFor(model => model.Numbers)
            @Html.TextAreaFor(model => model.Numbers, new { Class = "span6"})
            @Html.ValidationMessageFor(model => model.Numbers)
        </div>
    </fieldset>
    
    <fieldset id="Timing">
        @*<legend>Timing</legend>*@
        <div>
            @Html.LabelFor(model => model.StartTime, "Start Time")
            @Html.EditorFor(model => model.StartTime)
            @Html.ValidationMessageFor(model => model.StartTime)
        </div>
        
        <div id="CoordinationTiming">
            <div style="padding-bottom: 10px; display: inline-block">
                <p>Select how you want to coordinate the timing:</p>
                <input type="button" value="Time Separated" id="TimeSeparatedButton" class="UnSelectedButton" />
                <input type="button" value="Send All By Time" id="SendAllByButton" class="UnSelectedButton" />
                <input type="button" value="All At Once" id="AllAtOnceButton" class="UnSelectedButton"/>
            </div>
            @Html.HiddenFor(model => model.SendAllAtOnce)
            @Html.ValidationMessageFor(model => model.SendAllBy)
            @Html.ValidationMessageFor(model => model.TimeSeparatorSeconds)
            <div id="TimeSeparatedDiv">
                @Html.LabelFor(model => model.TimeSeparatorSeconds, "Time Separated (seconds)")
                @Html.EditorFor(model => model.TimeSeparatorSeconds)
            </div>
            <div id="SendAllByDiv">
                @Html.LabelFor(model => model.SendAllBy, "Send All By Time")
                @Html.EditorFor(model => model.SendAllBy)
            </div>
        </div>
    </fieldset>
    
    <fieldset>
        @*<legend>Exclusions</legend>*@
        @Html.LabelFor(model => model.CoordinatorsToExclude, "Coordinators To Exclude")
        @Html.ListBox("CoordinatorsToExclude", ViewData["CoordinatorExcludeList"] as List<SelectListItem>, new { Class = "span6" })
    </fieldset>

    <fieldset>
        <div>
            @Html.LabelFor(model => model.ConfirmationEmail, "Confirmation Email")
            @Html.EditorFor(model => model.ConfirmationEmail)
            @Html.ValidationMessageFor(model => model.ConfirmationEmail)
        </div>
        
        <div>
            @Html.LabelFor(model => model.Tags)
            @Html.EditorFor(model => model.Tags)
            @Html.ValidationMessageFor(model => model.Tags)
        </div>

    </fieldset>
    <p>
        <input type="submit" value="Create" />
    </p>
}



